FROM node:18-alpine AS base

# Install dependencies only when needed
FROM base AS deps
# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Install dependencies based on the preferred package manager
COPY package.json yarn.lock* package-lock.json* pnpm-lock.yaml* .npmrc* ./
RUN \
  if [ -f yarn.lock ]; then yarn --frozen-lockfile; \
  elif [ -f package-lock.json ]; then npm ci; \
  elif [ -f pnpm-lock.yaml ]; then corepack enable pnpm && pnpm i; \
  # Allow install without lockfile, so example works even without Node.js installed locally
  else echo "Lockfile not found." && exit 1; \
  fi

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

#COPY app ./app
#COPY components ./components
#COPY db ./db
#COPY hooks ./hooks
#COPY lib ./lib
#COPY migrations ./migrations
#COPY services ./services
#COPY types ./types
#COPY public ./public
#COPY next.config.ts .
#COPY tsconfig.json .

# Environment variables must be present at build time
# https://github.com/vercel/next.js/discussions/14030
#ARG NEXT_PUBLIC_SOLANA_RPC_URL
#ARG PG_HOST
#ARG PG_PORT
#ARG PG_USER
#ARG PG_PASSWORD
#ARG PG_DATABASE
#ARG OPENAI_API_KEY
#ARG TWITTER_BEARER_TOKEN
#ARG NETWORK_ID
#ARG CDP_API_KEY_NAME
#ARG CDP_API_KEY_PRIVATE_KEY
#ARG WALLET_DETAILS
#ARG NEXT_PUBLIC_PRIVY_APP_ID
#ARG PRIVY_APP_SECRET
#ARG NEXT_PUBLIC_POSTHOG_KEY
#ARG NEXT_PUBLIC_POSTHOG_HOST
#ARG NEXT_PUBLIC_AZURE_STORAGE_ACCOUNT_URL
#ARG NEXT_PUBLIC_AZURE_STORAGE_SAS_STRING
#ARG BIRDEYE_API_KEY
#ARG FIRECRAWL_API_KEY
#ARG CRAWL_AUTH_CODE
#ARG HELIUS_API_KEY
#ARG STAKING_REWARDS_API_KEY
#
#ENV NEXT_PUBLIC_SOLANA_RPC_URL=${NEXT_PUBLIC_SOLANA_RPC_URL}
#ENV PG_HOST=${PG_HOST}
#ENV PG_PORT=${PG_PORT}
#ENV PG_USER=${PG_USER}
#ENV PG_PASSWORD=${PG_PASSWORD}
#ENV PG_DATABASE=${PG_DATABASE}
#ENV OPENAI_API_KEY=${OPENAI_API_KEY}
#ENV TWITTER_BEARER_TOKEN=${TWITTER_BEARER_TOKEN}
#ENV NETWORK_ID=${NETWORK_ID}
#ENV CDP_API_KEY_NAME=${CDP_API_KEY_NAME}
#ENV CDP_API_KEY_PRIVATE_KEY=${CDP_API_KEY_PRIVATE_KEY}
#ENV WALLET_DETAILS=${WALLET_DETAILS}
#ENV NEXT_PUBLIC_PRIVY_APP_ID=${NEXT_PUBLIC_PRIVY_APP_ID}
#ENV PRIVY_APP_SECRET=${PRIVY_APP_SECRET}
#ENV NEXT_PUBLIC_POSTHOG_KEY=${NEXT_PUBLIC_POSTHOG_KEY}
#ENV NEXT_PUBLIC_POSTHOG_HOST=${NEXT_PUBLIC_POSTHOG_HOST}
#ENV NEXT_PUBLIC_AZURE_STORAGE_ACCOUNT_URL=${NEXT_PUBLIC_AZURE_STORAGE_ACCOUNT_URL}
#ENV NEXT_PUBLIC_AZURE_STORAGE_SAS_STRING=${NEXT_PUBLIC_AZURE_STORAGE_SAS_STRING}
#ENV BIRDEYE_API_KEY=${BIRDEYE_API_KEY}
#ENV FIRECRAWL_API_KEY=${FIRECRAWL_API_KEY}
#ENV CRAWL_AUTH_CODE=${CRAWL_AUTH_CODE}
#ENV HELIUS_API_KEY=${HELIUS_API_KEY}
#ENV STAKING_REWARDS_API_KEY=${STAKING_REWARDS_API_KEY}

# Next.js collects completely anonymous telemetry data about general usage. Learn more here: https://nextjs.org/telemetry
# Uncomment the following line to disable telemetry at build time
# ENV NEXT_TELEMETRY_DISABLED 1

# Build Next.js based on the preferred package manager
#RUN \
#  if [ -f yarn.lock ]; then yarn build; \
#  elif [ -f package-lock.json ]; then npm run build; \
#  elif [ -f pnpm-lock.yaml ]; then pnpm build; \
#  else npm run build; \
#  fi

RUN \
  if [ -f yarn.lock ]; then yarn run build; \
  elif [ -f package-lock.json ]; then npm run build; \
  elif [ -f pnpm-lock.yaml ]; then corepack enable pnpm && pnpm run build; \
  else echo "Lockfile not found." && exit 1; \
  fi

# Production image, copy all the files and run next
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production

# Don't run production as root
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

COPY --from=builder /app/public ./public

# Automatically leverage output traces to reduce image size
# https://nextjs.org/docs/advanced-features/output-file-tracing
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

USER nextjs

# Environment variables must be redefined at run time
#ARG NEXT_PUBLIC_SOLANA_RPC_URL
#ARG PG_HOST
#ARG PG_PORT
#ARG PG_USER
#ARG PG_PASSWORD
#ARG PG_DATABASE
#ARG OPENAI_API_KEY
#ARG TWITTER_BEARER_TOKEN
#ARG NETWORK_ID
#ARG CDP_API_KEY_NAME
#ARG CDP_API_KEY_PRIVATE_KEY
#ARG WALLET_DETAILS
#ARG NEXT_PUBLIC_PRIVY_APP_ID
#ARG PRIVY_APP_SECRET
#ARG NEXT_PUBLIC_POSTHOG_KEY
#ARG NEXT_PUBLIC_POSTHOG_HOST
#ARG NEXT_PUBLIC_AZURE_STORAGE_ACCOUNT_URL
#ARG NEXT_PUBLIC_AZURE_STORAGE_SAS_STRING
#ARG BIRDEYE_API_KEY
#ARG FIRECRAWL_API_KEY
#ARG CRAWL_AUTH_CODE
#ARG HELIUS_API_KEY
#ARG STAKING_REWARDS_API_KEY
#
#ENV NEXT_PUBLIC_SOLANA_RPC_URL=${NEXT_PUBLIC_SOLANA_RPC_URL}
#ENV PG_HOST=${PG_HOST}
#ENV PG_PORT=${PG_PORT}
#ENV PG_USER=${PG_USER}
#ENV PG_PASSWORD=${PG_PASSWORD}
#ENV PG_DATABASE=${PG_DATABASE}
#ENV OPENAI_API_KEY=${OPENAI_API_KEY}
#ENV TWITTER_BEARER_TOKEN=${TWITTER_BEARER_TOKEN}
#ENV NETWORK_ID=${NETWORK_ID}
#ENV CDP_API_KEY_NAME=${CDP_API_KEY_NAME}
#ENV CDP_API_KEY_PRIVATE_KEY=${CDP_API_KEY_PRIVATE_KEY}
#ENV WALLET_DETAILS=${WALLET_DETAILS}
#ENV NEXT_PUBLIC_PRIVY_APP_ID=${NEXT_PUBLIC_PRIVY_APP_ID}
#ENV PRIVY_APP_SECRET=${PRIVY_APP_SECRET}
#ENV NEXT_PUBLIC_POSTHOG_KEY=${NEXT_PUBLIC_POSTHOG_KEY}
#ENV NEXT_PUBLIC_POSTHOG_HOST=${NEXT_PUBLIC_POSTHOG_HOST}
#ENV NEXT_PUBLIC_AZURE_STORAGE_ACCOUNT_URL=${NEXT_PUBLIC_AZURE_STORAGE_ACCOUNT_URL}
#ENV NEXT_PUBLIC_AZURE_STORAGE_SAS_STRING=${NEXT_PUBLIC_AZURE_STORAGE_SAS_STRING}
#ENV BIRDEYE_API_KEY=${BIRDEYE_API_KEY}
#ENV FIRECRAWL_API_KEY=${FIRECRAWL_API_KEY}
#ENV CRAWL_AUTH_CODE=${CRAWL_AUTH_CODE}
#ENV HELIUS_API_KEY=${HELIUS_API_KEY}
#ENV STAKING_REWARDS_API_KEY=${STAKING_REWARDS_API_KEY}

# Uncomment the following line to disable telemetry at run time
# ENV NEXT_TELEMETRY_DISABLED 1

# Note: Don't expose ports here, Compose will handle that for us

USER nextjs

EXPOSE 3000

ENV PORT=3000

CMD ["node", "server.js"]
